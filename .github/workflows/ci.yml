name: CI Tests

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  test-python:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      
      - name: Check package installation
        run: |
          python -c "from gemini_search_mcp import cli; print('CLI import successful')"
          python -m gemini_search_mcp --help
      
      - name: Test CLI commands
        run: |
          python -m gemini_search_mcp --help
          python -m gemini_search_mcp run --help
          python -m gemini_search_mcp configure --help
          python -m gemini_search_mcp clear-cache --help

  test-node:
    name: Test Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: ['18', '20', '22']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Python package
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      
      - name: Test Node wrapper
        run: |
          node bin/gemini-search-mcp.js --help
      
      - name: Test Node wrapper commands
        run: |
          node bin/gemini-search-mcp.js run --help
          node bin/gemini-search-mcp.js configure --help

  build-test:
    name: Build Package Test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build Python package
        run: python -m build
      
      - name: Check package with twine
        run: twine check dist/*
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: dist/
          retention-days: 7

  mcp-protocol-test:
    name: MCP Protocol Test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      
      - name: Test MCP protocol initialization
        run: |
          export GOOGLE_API_KEY="test-key-for-ci"
          echo '{"jsonrpc":"2.0","id":1,"method":"initialize","params":{"protocolVersion":"2024-11-05","capabilities":{},"clientInfo":{"name":"ci-test","version":"1.0"}}}' | timeout 5 python -m gemini_search_mcp || echo "MCP test completed"
